(function(u,f){typeof exports=="object"&&typeof module<"u"?f(exports):typeof define=="function"&&define.amd?define(["exports"],f):(u=typeof globalThis<"u"?globalThis:u||self,f(u.ModernVector={}))})(this,function(u){"use strict";class f{constructor(t={}){this.id="canvas",this.capabilities={maxTextureSize:4096,supportsSVG:!1,supportsWebGL:!1,supports3D:!1},this.displaySize={width:0,height:0},this.options={context:{canvas:t.context?.canvas||document.createElement("canvas"),contextType:t.context?.contextType||"2d",contextAttributes:t.context?.contextAttributes||{}},antialias:t.antialias??!0,alpha:t.alpha??!0,autoClear:t.autoClear??!0,backgroundColor:t.backgroundColor||"transparent",pixelRatio:t.pixelRatio||1},this.canvas=this.options.context.canvas;const e=this.canvas.getContext("2d",{alpha:this.options.alpha,...this.options.context.contextAttributes});if(!e)throw new Error("Failed to get 2D context");this.context=e,this.options.antialias&&(this.context.imageSmoothingEnabled=!0,this.context.imageSmoothingQuality="high"),this.setSize(this.canvas.width,this.canvas.height)}getCanvas(){return this.canvas}getContext(){return this.context}setSize(t,e){const s=this.options.pixelRatio;this.displaySize={width:t,height:e},this.canvas.width=t*s,this.canvas.height=e*s,this.context.setTransform(1,0,0,1,0,0),this.context.scale(s,s),this.context.imageSmoothingEnabled=this.options.antialias,this.context.imageSmoothingQuality="high"}render(t){this.options.autoClear&&this.clear(),this.context.save(),t.root.childNodes.forEach(e=>{const s=e;this.renderShape(s)}),this.context.restore()}renderShape(t){this.context.save();const e=t.transform.values;switch(this.context.transform(e[0],e[3],e[1],e[4],e[2],e[5]),t.style.fillColor&&(this.context.fillStyle=t.style.fillColor),t.style.strokeColor&&(this.context.strokeStyle=t.style.strokeColor),t.style.strokeWidth&&(this.context.lineWidth=t.style.strokeWidth),t.style.strokeDashArray&&this.context.setLineDash(t.style.strokeDashArray),t.style.strokeDashOffset&&(this.context.lineDashOffset=t.style.strokeDashOffset),t.style.strokeLineCap&&(this.context.lineCap=t.style.strokeLineCap),t.style.strokeLineJoin&&(this.context.lineJoin=t.style.strokeLineJoin),t.style.strokeMiterLimit&&(this.context.miterLimit=t.style.strokeMiterLimit),t.style.fillOpacity!==void 0&&(this.context.globalAlpha=t.style.fillOpacity),t.type){case"rectangle":this.renderRectangle(t);break;case"circle":this.renderCircle(t);break;case"line":this.renderLine(t);break;case"path":this.renderPath(t);break;case"text":this.renderText(t);break}this.context.restore()}renderRectangle(t){const e=t.bounds;t.style.fillColor&&this.context.fillRect(e.x,e.y,e.width,e.height),t.style.strokeColor&&this.context.strokeRect(e.x,e.y,e.width,e.height)}renderCircle(t){const e=t.bounds,s=e.x+e.width/2,i=e.y+e.height/2,r=e.width/2;this.context.beginPath(),this.context.arc(s,i,r,0,Math.PI*2),t.style.fillColor&&this.context.fill(),t.style.strokeColor&&this.context.stroke()}renderLine(t){const e=t.bounds;this.context.beginPath(),this.context.moveTo(e.x,e.y),this.context.lineTo(e.x+e.width,e.y+e.height),t.style.strokeColor&&this.context.stroke()}renderPath(t){t.points&&(this.context.beginPath(),t.points.forEach((e,s)=>{e.type==="move"||s===0?this.context.moveTo(e.x,e.y):this.context.lineTo(e.x,e.y)}),t.style.fillColor&&this.context.fill(),t.style.strokeColor&&this.context.stroke())}renderText(t){if(!t.text)return;t.font&&t.fontSize&&(this.context.font=`${t.fontSize}px ${t.font}`),t.textAlign&&(this.context.textAlign=t.textAlign),t.textBaseline&&(this.context.textBaseline=t.textBaseline);const e=t.bounds;t.style.fillColor&&this.context.fillText(t.text,e.x,e.y),t.style.strokeColor&&this.context.strokeText(t.text,e.x,e.y)}clear(){this.context.save(),this.context.setTransform(1,0,0,1,0,0),this.options.backgroundColor==="transparent"?this.context.clearRect(0,0,this.canvas.width,this.canvas.height):(this.context.fillStyle=this.options.backgroundColor,this.context.fillRect(0,0,this.canvas.width,this.canvas.height)),this.context.restore()}dispose(){this.clear(),this.options.context.canvas.parentNode||typeof this.canvas.remove=="function"&&this.canvas.remove()}}class b{constructor(t={}){this.id="svg",this.capabilities={maxTextureSize:1/0,supportsSVG:!0,supportsWebGL:!1,supports3D:!1},this.displaySize={width:0,height:0},this.svgNS=t.context?.namespace||"http://www.w3.org/2000/svg",this.options={context:{svg:t.context?.svg||document.createElementNS(this.svgNS,"svg"),namespace:this.svgNS},antialias:t.antialias??!0,alpha:t.alpha??!0,autoClear:t.autoClear??!0,backgroundColor:t.backgroundColor||"transparent",pixelRatio:t.pixelRatio||1,width:t.width||100,height:t.height||100,viewBox:t.viewBox||{x:0,y:0,width:t.width||100,height:t.height||100},preserveAspectRatio:t.preserveAspectRatio||"xMidYMid meet"},this.svg=this.options.context.svg,this.setSize(this.options.width,this.options.height)}getSVG(){return this.svg}setSize(t,e){const s=this.options.pixelRatio;this.displaySize={width:t,height:e},this.svg.setAttribute("width",`${t*s}`),this.svg.setAttribute("height",`${e*s}`);const i=this.options.viewBox;this.svg.setAttribute("viewBox",`${i.x} ${i.y} ${i.width} ${i.height}`),this.svg.setAttribute("preserveAspectRatio",this.options.preserveAspectRatio)}render(t){this.options.autoClear&&this.clear(),t.root.childNodes.forEach(e=>{const s=e;this.renderShape(s)})}renderShape(t){let e;switch(t.type){case"rectangle":e=this.renderRectangle(t);break;case"circle":e=this.renderCircle(t);break;case"line":e=this.renderLine(t);break;case"path":e=this.renderPath(t);break;case"text":e=this.renderText(t);break;default:return}const s=t.transform.values;e.setAttribute("transform",`matrix(${s[0]},${s[1]},${s[3]},${s[4]},${s[2]},${s[5]})`),t.style.fillColor&&e.setAttribute("fill",t.style.fillColor),t.style.strokeColor&&e.setAttribute("stroke",t.style.strokeColor),t.style.strokeWidth&&e.setAttribute("stroke-width",t.style.strokeWidth.toString()),t.style.strokeDashArray&&e.setAttribute("stroke-dasharray",t.style.strokeDashArray.join(",")),t.style.strokeDashOffset&&e.setAttribute("stroke-dashoffset",t.style.strokeDashOffset.toString()),t.style.strokeLineCap&&e.setAttribute("stroke-linecap",t.style.strokeLineCap),t.style.strokeLineJoin&&e.setAttribute("stroke-linejoin",t.style.strokeLineJoin),t.style.strokeMiterLimit&&e.setAttribute("stroke-miterlimit",t.style.strokeMiterLimit.toString()),t.style.fillOpacity!==void 0&&e.setAttribute("fill-opacity",t.style.fillOpacity.toString()),this.svg.appendChild(e)}renderRectangle(t){const e=document.createElementNS(this.svgNS,"rect"),s=t.bounds;return e.setAttribute("x",s.x.toString()),e.setAttribute("y",s.y.toString()),e.setAttribute("width",s.width.toString()),e.setAttribute("height",s.height.toString()),e}renderCircle(t){const e=document.createElementNS(this.svgNS,"circle"),s=t.bounds,i=s.x+s.width/2,r=s.y+s.height/2,n=s.width/2;return e.setAttribute("cx",i.toString()),e.setAttribute("cy",r.toString()),e.setAttribute("r",n.toString()),e}renderLine(t){const e=document.createElementNS(this.svgNS,"line"),s=t.bounds;return e.setAttribute("x1",s.x.toString()),e.setAttribute("y1",s.y.toString()),e.setAttribute("x2",(s.x+s.width).toString()),e.setAttribute("y2",(s.y+s.height).toString()),e}renderPath(t){const e=document.createElementNS(this.svgNS,"path");if(!t.points)return e;let s="";return t.points.forEach((i,r)=>{i.type==="move"||r===0?s+=`M ${i.x} ${i.y}`:s+=`L ${i.x} ${i.y}`}),e.setAttribute("d",s),e}renderText(t){const e=document.createElementNS(this.svgNS,"text");if(!t.text)return e;const s=t.bounds;return e.setAttribute("x",s.x.toString()),e.setAttribute("y",s.y.toString()),t.font&&e.setAttribute("font-family",t.font),t.fontSize&&e.setAttribute("font-size",t.fontSize.toString()),t.textAlign&&e.setAttribute("text-anchor",this.getTextAnchor(t.textAlign)),t.textBaseline&&e.setAttribute("dominant-baseline",this.getDominantBaseline(t.textBaseline)),e.textContent=t.text,e}getTextAnchor(t){switch(t){case"center":return"middle";case"right":return"end";default:return"start"}}getDominantBaseline(t){switch(t){case"middle":return"central";case"bottom":return"text-after-edge";default:return"text-before-edge"}}clear(){for(;this.svg.firstChild;)this.svg.removeChild(this.svg.firstChild);if(this.options.backgroundColor!=="transparent"){const t=document.createElementNS(this.svgNS,"rect");t.setAttribute("x","0"),t.setAttribute("y","0"),t.setAttribute("width","100%"),t.setAttribute("height","100%"),t.setAttribute("fill",this.options.backgroundColor),this.svg.appendChild(t)}}dispose(){this.clear(),this.options.context.svg&&!this.options.context.svg.parentNode&&this.svg.remove()}}class a{constructor(t,e){this.x=t,this.y=e,this.x=this.x===0?0:this.x,this.y=this.y===0?0:this.y}static create(t=0,e=0){return new a(t,e)}add(t){return new a(this.x+t.x,this.y+t.y)}subtract(t){return new a(this.x-t.x,this.y-t.y)}scale(t){return new a(this.x*t,this.y*t)}dot(t){return this.x*t.x+this.y*t.y}get length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.length;return t===0?a.create(0,0):this.scale(1/t)}angle(t){const s=this.dot(t)/(this.length*t.length);return Math.acos(Math.min(Math.max(s,-1),1))}rotate(t){const e=Math.cos(t),s=Math.sin(t);return new a(this.x*e-this.y*s,this.x*s+this.y*e)}perpendicular(){const t=-this.y===0?0:-this.y,e=this.x===0?0:this.x;return new a(t,e)}distanceTo(t){return this.subtract(t).length}}class h{constructor(t){if(this._values=t,t.length!==9)throw new Error("Matrix3x3 requires exactly 9 values")}get values(){return[...this._values]}static create(t){return t?new h([...t]):new h([1,0,0,0,1,0,0,0,1])}static translation(t,e){return new h([1,0,t,0,1,e,0,0,1])}static rotation(t){const e=Math.cos(t),s=Math.sin(t);return new h([e,-s,0,s,e,0,0,0,1])}static scale(t,e){return new h([t,0,0,0,e,0,0,0,1])}multiply(t){const e=this._values,s=t._values,i=new Array(9);for(let r=0;r<3;r++)for(let n=0;n<3;n++){let c=0;for(let o=0;o<3;o++)c+=e[r*3+o]*s[o*3+n];i[r*3+n]=c}return new h(i)}determinant(){const[t,e,s,i,r,n,c,o,l]=this._values;return t*(r*l-n*o)-e*(i*l-n*c)+s*(i*o-r*c)}inverse(){const t=this.determinant();if(Math.abs(t)<1e-6)throw new Error("Matrix is not invertible");const[e,s,i,r,n,c,o,l,y]=this._values,M=n*y-c*l,T=i*l-s*y,R=s*c-i*n,P=c*o-r*y,L=e*y-i*o,Y=i*r-e*c,$=r*l-n*o,N=s*o-e*l,X=e*n-s*r,g=1/t;return new h([M*g,T*g,R*g,P*g,L*g,Y*g,$*g,N*g,X*g])}}class v{constructor(t,e={}){this.id=e.id||crypto.randomUUID(),this.type=t,this.transform=e.transform||h.create(),this.style=e.style||{},this.scaleOrigin=e.scaleOrigin||"topLeft",this.customScaleOrigin=e.customScaleOriginPoint}setScaleOrigin(t,e){this.scaleOrigin=t,t==="custom"&&e&&(this.customScaleOrigin=e)}getScaleOriginPoint(){const t=this.getLocalBounds();switch(this.scaleOrigin){case"center":return{x:t.x+t.width/2,y:t.y+t.height/2};case"topLeft":return{x:t.x,y:t.y};case"custom":return this.customScaleOrigin||this.getScaleOriginPoint();default:return this.getScaleOriginPoint()}}intersects(t){const e=this.bounds,s=t.bounds;return!(s.x>e.x+e.width||s.x+s.width<e.x||s.y>e.y+e.height||s.y+s.height<e.y)}getTransformScale(t=this.transform){const e=Math.sqrt(t.values[0]*t.values[0]+t.values[1]*t.values[1]),s=Math.sqrt(t.values[3]*t.values[3]+t.values[4]*t.values[4]);return{scaleX:e,scaleY:s}}getTransformAroundPoint(t,e,s){const i=h.translation(e,s),r=h.translation(-e,-s);return i.multiply(t).multiply(r).multiply(this.transform)}}class x extends v{constructor(t={}){super("rectangle",t),this._x=t.x||0,this._y=t.y||0,this._width=t.width||0,this._height=t.height||0}getLocalBounds(){return{x:this._x,y:this._y,width:this._width,height:this._height}}get bounds(){const t=[a.create(this._x,this._y),a.create(this._x+this._width,this._y),a.create(this._x+this._width,this._y+this._height),a.create(this._x,this._y+this._height)].map(o=>{const l=this.transform.multiply(h.translation(o.x,o.y));return a.create(l.values[2],l.values[5])}),e=t.map(o=>o.x),s=t.map(o=>o.y),i=Math.min(...e),r=Math.min(...s),n=Math.max(...e),c=Math.max(...s);return{x:i,y:r,width:n-i,height:c-r}}clone(){return new x({id:crypto.randomUUID(),transform:h.create(this.transform.values),style:{...this.style},x:this._x,y:this._y,width:this._width,height:this._height})}applyTransform(t){const e=this.getTransformScale(t);if(e.scaleX!==1||e.scaleY!==1){let s;switch(this.scaleOrigin){case"center":s={x:this._x+this._width/2,y:this._y+this._height/2};break;case"custom":s=this.customScaleOrigin||{x:this._x,y:this._y};break;default:s={x:this._x,y:this._y}}return new x({id:this.id,transform:this.getTransformAroundPoint(t,s.x,s.y),style:{...this.style},x:this._x,y:this._y,width:this._width,height:this._height,scaleOrigin:this.scaleOrigin,customScaleOriginPoint:this.customScaleOrigin})}return new x({id:this.id,transform:t.multiply(this.transform),style:{...this.style},x:this._x,y:this._y,width:this._width,height:this._height,scaleOrigin:this.scaleOrigin,customScaleOriginPoint:this.customScaleOrigin})}containsPoint(t){const s=this.transform.inverse().multiply(h.translation(t.x,t.y)),i=s.values[2],r=s.values[5];return i>=this._x&&i<=this._x+this._width&&r>=this._y&&r<=this._y+this._height}intersects(t){const e=this.bounds,s=t.bounds;return!(s.x>e.x+e.width||s.x+s.width<e.x||s.y>e.y+e.height||s.y+s.height<e.y)}toPath(){const t=this.bounds;return[{x:t.x,y:t.y,type:"move"},{x:t.x+t.width,y:t.y,type:"line"},{x:t.x+t.width,y:t.y+t.height,type:"line"},{x:t.x,y:t.y+t.height,type:"line"},{x:t.x,y:t.y,type:"line"}]}}class S{create(t){return new x(t)}}class m extends v{constructor(t={}){super("circle",t),this._centerX=t.centerX||0,this._centerY=t.centerY||0,this._radius=t.radius||0}getLocalBounds(){return{x:this._centerX-this._radius,y:this._centerY-this._radius,width:this._radius*2,height:this._radius*2}}get bounds(){const t=this.transform.multiply(h.translation(this._centerX,this._centerY)),e=t.values[2],s=t.values[5],{scaleX:i,scaleY:r}=this.getTransformScale(),n=Math.max(i,r)*this._radius;return{x:e-n,y:s-n,width:n*2,height:n*2}}clone(){return new m({id:crypto.randomUUID(),transform:h.create(this.transform.values),style:{...this.style},centerX:this._centerX,centerY:this._centerY,radius:this._radius})}applyTransform(t){const e=this.getTransformScale(t);if(e.scaleX!==1||e.scaleY!==1){let s;switch(this.scaleOrigin){case"center":s={x:this._centerX,y:this._centerY};break;case"custom":s=this.customScaleOrigin||{x:this._centerX-this._radius,y:this._centerY-this._radius};break;default:s={x:this._centerX-this._radius,y:this._centerY-this._radius}}return new m({id:this.id,transform:this.getTransformAroundPoint(t,s.x,s.y),style:{...this.style},centerX:this._centerX,centerY:this._centerY,radius:this._radius,scaleOrigin:this.scaleOrigin,customScaleOriginPoint:this.customScaleOrigin})}return new m({id:this.id,transform:t.multiply(this.transform),style:{...this.style},centerX:this._centerX,centerY:this._centerY,radius:this._radius,scaleOrigin:this.scaleOrigin,customScaleOriginPoint:this.customScaleOrigin})}containsPoint(t){const e=this.transform.multiply(h.translation(this._centerX,this._centerY)),s=e.values[2],i=e.values[5],r=t.x-s,n=t.y-i,c=Math.sqrt(r*r+n*n),{scaleX:o,scaleY:l}=this.getTransformScale(),y=Math.max(o,l)*this._radius;return c<=y}intersects(t){const e=this.bounds,s=t.bounds;return!(s.x>e.x+e.width||s.x+s.width<e.x||s.y>e.y+e.height||s.y+s.height<e.y)}toPath(t=32){const e=this.bounds,s=e.x+e.width/2,i=e.y+e.height/2,r=e.width/2,n=[];n.push({x:s+r,y:i,type:"move"});for(let c=1;c<=t;c++){const o=c*2*Math.PI/t;n.push({x:s+r*Math.cos(o),y:i+r*Math.sin(o),type:"line"})}return n.push({x:s+r,y:i,type:"line"}),n}}class k{create(t){return new m(t)}}class _{constructor(){this.id="shape",this.version="1.0.0",this.dependencies=["math"],this.factories=new Map,this.registerShape("rectangle",new S),this.registerShape("circle",new k)}install(t){}uninstall(t){this.factories.clear()}registerShape(t,e){if(this.factories.has(t))throw new Error(`Shape type '${t}' is already registered`);this.factories.set(t,e)}createShape(t,e){const s=this.factories.get(t);if(!s)throw new Error(`Unknown shape type: ${t}`);return s.create(e)}hasShape(t){return this.factories.has(t)}}class A{constructor(){this.renderers=new Map,this.activeRenderer=null}register(t){if(this.renderers.has(t.id))throw new Error(`Renderer with id ${t.id} is already registered`);this.renderers.set(t.id,t),this.activeRenderer||(this.activeRenderer=t)}setActive(t){const e=this.renderers.get(t);if(!e)throw new Error(`No renderer found with id ${t}`);this.activeRenderer=e}render(t){if(!this.activeRenderer)throw new Error("No active renderer available");this.activeRenderer.render(t)}}class w{constructor(){this.handlers=new Map}on(t,e){this.handlers.has(t)||this.handlers.set(t,new Set),this.handlers.get(t).add(e)}off(t,e){const s=this.handlers.get(t);s&&(s.delete(e),s.size===0&&this.handlers.delete(t))}emit(t,e){const s=this.handlers.get(t);s&&s.forEach(i=>i(e))}}class p extends w{constructor(){super(...arguments),this.namespaces=new Map}createNamespace(t){return this.namespaces.has(t)||this.namespaces.set(t,new w),this.namespaces.get(t)}}class C{constructor(t,e){this.engine=t,this.root=document.createElement("div"),this.plugins=new Map,this.eventEmitter=e}get renderer(){return this.engine.renderer}on(t,e){this.eventEmitter.on(t,e)}off(t,e){this.eventEmitter.off(t,e)}emit(t,e){this.eventEmitter.emit(t,e)}}class O{constructor(t){this.engine=t,this.scenes=new Set,this.activeScene=null}create(){const t=new C(this.engine,this.engine.events.createNamespace("scene"));return this.scenes.add(t),this.activeScene||(this.activeScene=t),t}getActive(){if(!this.activeScene)throw new Error("No active scene available");return this.activeScene}setActive(t){if(!this.scenes.has(t))throw new Error("Scene is not managed by this service");this.activeScene=t}}class E{constructor(){this.plugins=new Map,this.renderer=new A,this.events=new p,this.scene=new O(this)}use(t){if(t.dependencies){for(const e of t.dependencies)if(!this.plugins.has(e))throw new Error(`Plugin ${t.id} requires ${e} to be installed first`)}t.install(this),this.plugins.set(t.id,t)}remove(t){const e=this.plugins.get(t);if(e){for(const[s,i]of this.plugins)if(i.dependencies?.includes(t))throw new Error(`Cannot remove plugin ${t}: plugin ${s} depends on it`);e.uninstall(this),this.plugins.delete(t)}}getPlugin(t){return this.plugins.get(t)||null}}u.CanvasRenderer=f,u.Matrix3x3=h,u.SVGRenderer=b,u.ShapePlugin=_,u.Vector2D=a,u.VectorEngine=E,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=modern-vector.umd.cjs.map
